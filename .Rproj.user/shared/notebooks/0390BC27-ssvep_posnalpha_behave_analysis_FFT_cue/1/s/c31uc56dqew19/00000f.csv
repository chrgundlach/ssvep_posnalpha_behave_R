"0","#define priors: [needs rechecking!]"
"0","priors = c("
"0","  set_prior('normal(6.397, 5.29832)', class = 'Intercept'),  # around exp(6) = 600ms"
"0","  set_prior('normal(5.29832,5.29832)', class = 'sigma'),  # SD of individual rts in log-units exp 5.298 = 200"
"0","  set_prior('normal(0,  5.01064)', class = 'b'),  # around 150 ms in each direction"
"0","  set_prior('normal(6.21461, 6.21461)', class = 'sd')  # some variability between participants"
"0",")"
"0",""
"0","modeldata = DATA.In_long %>%"
"0",""
"0","# intercept model"
"0","fit_intercept = brm(formula = post_RT ~ 1 + (1|subject),"
"0","          data = modeldata, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_intercept_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0",""
"0","# validity model"
"0","fit_validity = brm(formula = post_RT ~ cue_validity_label + (cue_validity_label|subject),"
"0","          data = modeldata, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0",""
"0",""
"0","# # validity model with specified priors"
"0","# fit_validity_pr = brm(formula = post_RT ~ cue_validity_label + (1|subject),"
"0","#           data = modeldata, "
"0","#           family = shifted_lognormal(),"
"0","#           file = 'fit_validity_withpriors_slog',"
"0","#           save_pars = save_pars(all = TRUE),"
"0","#           file_refit = ""on_change"","
"0","#           prior=priors"
"0","#           # file_refit = ""always"""
"0","#           )  # Save all that hard work."
"0",""
"0","# alter data to extract post-cue alpha contra to target"
"0","modeldata2 = DATA.In_longer %>%"
"0","  filter(post_hit == ""hit"", signal == ""visualAlpha"", time == ""[500 1500]ms"", pos_rel_target == ""contra_target"")%>%"
"0","  mutate(post_cue_vis_alpha_contra_target = amplitude)"
"0",""
"0","# visual alpha contra target"
"0","fit_visalpha = brm(formula = post_RT ~ post_cue_vis_alpha_contra_target + (1|subject),"
"0","          data = modeldata2, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_visalpha_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# visual alpha contra target + validity"
"0","          data = modeldata2, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_visalpha_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# visual alpha contra target * validity"
"0","fit_validity_x_visalpha = brm(formula = post_RT ~ cue_validity_label * post_cue_vis_alpha_contra_target + (cue_validity_label|subject),"
"0","          data = modeldata2, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_x_visalpha_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# alter data to extract post-cue alpha contra to nontarget"
"0","  filter(post_hit == ""hit"", signal == ""visualAlpha"", time == ""[500 1500]ms"", pos_rel_target == ""contra_nontarget"")%>%"
"0","  mutate(post_cue_vis_alpha_contra_nontarget = amplitude)"
"0",""
"0","# visual alpha contra nontarget "
"0","          data = modeldata3, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_visalpha2_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change""# file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# visual alpha contra nontarget + validity"
"0","          data = modeldata3, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_visalpha2_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# visual alpha contra nontarget + validity"
"0","fit_validity_x_alpha2 = brm(formula = post_RT ~ cue_validity_label * post_cue_vis_alpha_contra_nontarget + (cue_validity_label|subject),"
"0","          data = modeldata3, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_x_visalpha2_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# combined alpha model"
"0","modeldata4 = DATA.In_longer %>%"
"0","  filter(post_hit == ""hit"", signal == ""visualAlpha"", time == ""[500 1500]ms"")%>%"
"0","  dplyr::select(subject, trialnumber, cue_validity_label, post_RT, pos_rel_target, amplitude) %>%"
"0","  pivot_wider(names_from = ""pos_rel_target"", values_from = amplitude)"
"0",""
"0","# visual alpha contra target and contra non-target"
"0","fit_alpha1_alpha2 = brm(formula = post_RT ~ contra_target + contra_nontarget + (1|subject),"
"0","          data = modeldata4, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_visalpha1_visalpha2_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# visual alpha contra target and contra non-target + validity"
"0","fit_validity_alpha1_alpha2 = brm(formula = post_RT ~ cue_validity_label + contra_target + contra_nontarget + (cue_validity_label|subject),"
"0","          data = modeldata4, "
"0","          file = 'fit_validity_visalpha1_visalpha2_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# visual alpha contra target and contra non-target + validity"
"0","fit_validity_x_alpha1_alpha2 = brm("
"0","          data = modeldata4, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_x_visalpha1_visalpha2_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# # visual alpha contra target and contra non-target + validity with random factor validity"
"0","# fit_validity_alpha1_alpha2_v2 = brm(formula = post_RT ~ cue_validity_label + contra_target + contra_nontarget + (cue_validity_label|subject),"
"0","#           data = modeldata4, "
"0","#           family = shifted_lognormal(),"
"0","#           file = 'fit_validity_visalpha1_visalpha2_v2_slog',"
"0","#           save_pars = save_pars(all = TRUE),"
"0","#           file_refit = ""on_change"""
"0","#           # file_refit = ""always"""
"0","#           )  # Save all that hard work."
"0",""
"0",""
"0","modeldata5 = DATA.In_longer %>%"
"0","  filter(post_hit == ""hit"", signal == ""SSVEP"", time == ""[500 1500]ms"", pos_rel_target == ""contra_target"")%>%"
"0","  mutate(post_cue_SSVEP_contra_target = amplitude)"
"0",""
"0","# SSVEP model"
"0","          data = modeldata5, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_ssvep_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# SSVEP + validity model"
"0","          data = modeldata5, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_ssvep_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","fit_validity_x_SSVEP = brm(formula = post_RT ~ cue_validity_label * post_cue_SSVEP_contra_target + (cue_validity_label|subject),"
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_x_ssvep_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0",""
"0",""
"0","# alter data to extract post-cue alpha contra to target"
"0","modeldata5 = DATA.In_longer %>%"
"0","  filter(post_hit == ""hit"", signal != ""motorAlpha"", time == ""[500 1500]ms"")%>%"
"0","  dplyr::select(subject, trialnumber, cue_validity_label, post_RT, signal, pos_rel_target, amplitude) %>%"
"0","  pivot_wider(names_from = c(""signal"", ""pos_rel_target""), values_from = amplitude)"
"0",""
"0","# visual alpha contra target and contra non-target and SSVEP"
"0","fit_SSVEP_alpha = brm(formula = post_RT ~ visualAlpha_contra_target + visualAlpha_contra_nontarget + SSVEP_contra_target + (1|subject),"
"0","          data = modeldata5, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_SSVEP_alpha_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","# visual alpha contra target and contra non-target and SSVEP  + validity"
"0","fit_validity_SSVEP_alpha = brm(formula = post_RT ~ cue_validity_label + visualAlpha_contra_target + visualAlpha_contra_nontarget + SSVEP_contra_target + (cue_validity_label|subject),"
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_SSVEP_alpha_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0","fit_validity_x_SSVEP_alpha = brm("
"0","          data = modeldata5, "
"0","          family = shifted_lognormal(),"
"0","          file = 'fit_validity_x_SSVEP_alpha_slog',"
"0","          save_pars = save_pars(all = TRUE),"
"0","          file_refit = ""on_change"""
"0","          # file_refit = ""always"""
"0","          )  # Save all that hard work."
"0",""
"0",""
"0",""
